####################################################################################################
#                       This is a template *ini file
#   note:
#   T = t = true = True
#   F = f = false = False
#
#	TODO: add error control option
####################################################################################################

chain_root  = some_name # root of the names of the chains to be generated.

chain_num   = 1     # how many chains will be generated.  Note that in this version, all the chains
                    # are generated one after the other, so if the dimension of the problem is high,
                    # it is recommended to generate more chains, so that one can check then
                    # convergence by comparing the latest generated chains to those first generated 
                    # chains.

walker_num  = 200   # number of walkers in the ensemble.

burnin_step = 50    # how many times of iterations for burn-in.

sample_step = 1000  # this is actually the number of iterations, so the true size of the sample is
                    # " sample_step * walker_num "

skip_step   = 10    # after one chain is finished (the sampling is still going), you can choose to
                    # skip some steps of writing samples into chain files.
                    # default value is 10.

efficient_a = 2.0   # this factor controls the acceptance ratio, when the dimension of the problem
                    # is low, 2 is usually a good choice. But when the dimension is high, it is better
                    # to set a smaller value, and MUST properly increase the sample_step, since the
                    # convergence rate is always becoming slow in high dimensional cases.

init_ball_radius = 0.5	# (reduced) radius of ND-ball, in which the sampler will randomly picks
						# values to initialize the walkers. Note: this radius MUST > 0 and < 1

start_from_fiducial = true  # if true, then the initial walkers are drawn around the fiducial values.

use_cosmomc_format = true   # if true, then the sampled chains will be in the same format as that
                            # for CosmoMC::GetDist, however, in this case, the weights in the first
                            # columns are all set to 1.
                            # if false, then the weights will be set to \exp(-0.5*\chisq)

save_burned_ashes   = true  # if true, the burn-bin chains will be saved, from which you can see the
                            # 'evolution' of the chisq.

save_state_for_N_steps = 50

stop_on_error		= false	# whether stop when error happens (inside likelihood functions) ?

# set the ranges of your parameters
# fiducial_value:: this is actually used only for generating the first sampling position in
# parameter space. Lower_bound and upper_bound define the legal sampling range, if jump outside that
# range, then prior function will return 0, other it will always return 1. The fiducial_value should
# sit between lower_bound and upper_bound

param1 = fiducial_value1, lower_bound1, upper_bound1
param2 = fiducial_value2, lower_bound2, upper_bound2

####################################################################################################
# NOTE: names are case sensitive  !!!
# the output order is exactly the same as you listed. If output_params is not set, then the output
# order might be as good as you wish, the order is determined by C++ map<> internally ... so I
# suggest you write down all the parameters of interests in the order you like.
####################################################################################################

output_params = param1 param2 ...          	# could be separated by space or comma

output_dparams = dparam1 dparam2 ...		# same as output_params, but these are derived parameters

write_chain_header = false  # whether write the parameter names as the heads of the chains.  If you 
                            # want to use GetDist.py to process the chains, it is better to set this
                            # to FALSE, if not errors might happen when loading chains.
                            # Update info: the error does not exist if pandas (0.17.0) is installed.

#   ================================================================================================
#   other settings you might wish to add, i.e., parameters to control data set usage
